@model ContainersWeb.Models.ContainerTracking

@using Resources

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">@Resources.Edit</h4>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-body">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ContainerTrackingId)
        @Html.HiddenFor(model => model.InsertedAt)
        @Html.HiddenFor(model => model.InsertedBy)

        <div class="row form-row">
            <div class="col-md-6">
                <label class="form-label">@Resources.Tracking</label>
                @Html.EditorFor(model => model.TrackingType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.TrackingType, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                <label class="form-label">@Resources.Type</label>
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row form-row">
            <div class="col-md-4">
                <label class="form-label">@Resources.ContainerStatus</label>
                @Html.EnumDropDownListFor(model => model.ContainerStatus, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ContainerStatus, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                <label class="form-label">@Resources.Gate</label>
                @Html.DropDownList("GateId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GateId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 dn">
                <label class="form-label">@Resources.DocNumber</label>
                @Html.EditorFor(model => model.DocNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DocNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row form-row">
            <div class="col-md-6">
                <label class="form-label">@Resources.LicensePlate</label>
                @Html.EditorFor(model => model.ContainerLicensePlate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContainerLicensePlate, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6 contenedor">
                <label class="form-label">@Resources.Number</label>
                @Html.EditorFor(model => model.ContainerNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContainerNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row form-row">
            <div class="col-md-6">
                <label class="form-label">@Resources.Origin</label>
                @Html.DropDownList("CompanyOriginId", null, "Seleccionar", htmlAttributes: new { @class = "select-drop" })
                @Html.ValidationMessageFor(model => model.CompanyOriginId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                <label class="form-label">@Resources.Destination</label>
                @Html.DropDownList("CompanyDestinationId", null, "Seleccionar", htmlAttributes: new { @class = "select-drop" })
                @Html.ValidationMessageFor(model => model.CompanyDestinationId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row form-row pv">
            <div class="col-md-4">
                <label class="form-label">@Resources.ContainerLabel</label>
                @Html.EditorFor(model => model.ContainerLabel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContainerLabel, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                <label class="form-label">@Resources.CorrelAduana</label>
                @Html.EditorFor(model => model.CorrelAduana, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CorrelAduana, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                <label class="form-label">@Resources.DUA</label>
                @Html.EditorFor(model => model.DUA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DUA, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row form-row">
            <div class="col-md-6">
                <label class="form-label">@Resources.Driver</label>
                @Html.DropDownList("DriverId", null, "Seleccionar", htmlAttributes: new { @class = "select-drop" })
                @Html.ValidationMessageFor(model => model.DriverId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                <label class="form-label">@Resources.SercuritySupervisor</label>
                @Html.DropDownList("SecuritySupervisorId", null, "Seleccionar", htmlAttributes: new { @class = "select-drop" })
                @Html.ValidationMessageFor(model => model.SecuritySupervisorId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row form-row">
            <div class="col-md-6">
                <label class="form-label">@Resources.InsertedDate</label>
                @Html.EditorFor(model => model.InsertedAt, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UpdatedAt, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                <label class="form-label">@Resources.InsertedBy</label>
                @Html.EditorFor(model => model.InsertedBy, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.InsertedBy, "", new { @class = "text-danger" })
            </div>
        </div> 
        <div class="row form-row">
            <div class="col-md-6">
                <label class="form-label">@Resources.UpdatedDate</label>
                @Html.EditorFor(model => model.UpdatedAt, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UpdatedAt, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                <label class="form-label">@Resources.UpdatedBy</label>
                @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="modal-footer">
        <button class="btn" type="button" data-dismiss="modal">@Resources.Cancel</button>
        <input class="btn btn-primary" type="submit" value="@Resources.Save" />
    </div>
}

<script type="text/javascript">

    function validate() {
        var type = $('#Type').val();

        var containerStatus = $('#ContainerStatus').val();

        var trackingType = $('#TrackingType').val();

        //type IN or Out they needs the same fields, only when its empty or full
        if (containerStatus == 0) {
            $('.pv').hide();
        } else if (containerStatus == 1) {
            $('.pv').show();
        }

        if (type == 1) {
            $('.dn').hide();
        } else {
            $('.dn').show();
        }

        if (trackingType == 1) {
            $('.contenedor').hide();
        } else {
            $('.contenedor').show();
        }

    };

    $(document).ready(function () {

        validate();

        $('#ContainerStatus').change(function () {
            validate()
        });

        $('.select-drop').select2();

    });
</script>
